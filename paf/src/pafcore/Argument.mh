//DO NOT EDIT THIS FILE, it is generated by idlcpp
//http://www.idlcpp.org

#pragma once

#include "Argument.h"
#include "ClassType.h"
#include "EnumType.h"
#include "TypeAlias.h"
#include "Variant.h"
#include "SubclassInvoker.h"

namespace idlcpp
{

	class __pafcore__Argument_Type : public ::pafcore::ClassType
	{
	public:
		__pafcore__Argument_Type();
	public:
		virtual void destroyInstance(void* address);
		virtual void destroyArray(void* address);
		virtual void assign(void* dst, const void* src);
	public:
		static ::pafcore::ErrorCode Argument_get_byNewArrayPtr(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode Argument_get_byNewArrayRef(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode Argument_get_byNewPtr(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode Argument_get_byNewRef(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode Argument_get_byOutPtr(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode Argument_get_byOutRef(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode Argument_get_byPtr(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode Argument_get_byRef(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode Argument_get_byValue(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode Argument_get_isConstant(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode Argument_get_type(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
	public:
		PAFCORE_EXPORT static __pafcore__Argument_Type* GetSingleton();
	};

}

template<>
struct RuntimeTypeOf<::pafcore::Argument>
{
	typedef ::idlcpp::__pafcore__Argument_Type RuntimeType;
	enum {type_category = ::pafcore::reference_object};
};

